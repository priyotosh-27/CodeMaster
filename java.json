[
    {
        "title": "Java Test 1",
        "duration": 10,
        "questions": [
            {
                "q": "What is the difference between JDK, JRE, and JVM in Java?",
                "options": [
                    "JDK = Java Development Kit, JRE = Java Runtime Environment, JVM = Java Virtual Machine",
                    "JDK = Compiler only, JRE = Hardware, JVM = Interpreter",
                    "JDK = Libraries only, JRE = Editor, JVM = Debugger",
                    "All are same"
                ],
                "answer": "JDK = Java Development Kit, JRE = Java Runtime Environment, JVM = Java Virtual Machine"
            },
            {
                "q": "Which principle of OOP is implemented when a subclass provides a specific implementation of a method declared in its parent class?",
                "options": [
                    "Encapsulation",
                    "Inheritance",
                    "Polymorphism",
                    "Abstraction"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "In Java, which access modifier makes a member visible only within its own package?",
                "options": [
                    "private",
                    "protected",
                    "default (no modifier)",
                    "public"
                ],
                "answer": "default (no modifier)"
            },
            {
                "q": "What is the main difference between abstract class and interface in Java?",
                "options": [
                    "Abstract class can have both abstract and non-abstract methods, while interface can only have abstract methods (till Java 7)",
                    "Interface supports constructors, abstract class does not",
                    "Abstract class can be instantiated, interface cannot",
                    "Both are exactly the same"
                ],
                "answer": "Abstract class can have both abstract and non-abstract methods, while interface can only have abstract methods (till Java 7)"
            },
            {
                "q": "Which keyword is used to achieve inheritance in Java?",
                "options": [
                    "extends",
                    "implements",
                    "super",
                    "this"
                ],
                "answer": "extends"
            },
            {
                "q": "What is method overloading in Java?",
                "options": [
                    "Defining multiple methods with the same name but different parameter lists",
                    "Redefining a method in the subclass with the same signature",
                    "Declaring multiple classes with the same name",
                    "Using multiple constructors in the same class"
                ],
                "answer": "Defining multiple methods with the same name but different parameter lists"
            },
            {
                "q": "Which of the following is NOT a feature of Java?",
                "options": [
                    "Platform Independent",
                    "Automatic Garbage Collection",
                    "Operator Overloading",
                    "Object-Oriented"
                ],
                "answer": "Operator Overloading"
            },
            {
                "q": "What is the difference between == and .equals() in Java?",
                "options": [
                    "== checks memory reference, .equals() checks content",
                    "== checks content, .equals() checks memory reference",
                    "Both are the same",
                    "== can be used only on objects"
                ],
                "answer": "== checks memory reference, .equals() checks content"
            },
            {
                "q": "Which design pattern is used in Java for creating only one instance of a class?",
                "options": [
                    "Factory Pattern",
                    "Singleton Pattern",
                    "Observer Pattern",
                    "Builder Pattern"
                ],
                "answer": "Singleton Pattern"
            },
            {
                "q": "Which keyword is used in Java to call the parent class constructor?",
                "options": [
                    "this",
                    "super",
                    "parent",
                    "extends"
                ],
                "answer": "super"
            }
        ]
    },
    {
        "title": "Java Test 2",
        "duration": 10,
        "questions": [
            {
                "q": "What is the difference between abstract class and interface in Java?",
                "options": [
                    "Abstract class can have both abstract and concrete methods, interface can have only abstract methods (before Java 8)",
                    "Interface can have constructors but abstract class cannot",
                    "Abstract class supports multiple inheritance but interface does not",
                    "Both are the same"
                ],
                "answer": "Abstract class can have both abstract and concrete methods, interface can have only abstract methods (before Java 8)"
            },
            {
                "q": "Which concept of OOP is implemented by method overloading in Java?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Inheritance",
                    "Abstraction"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "What is the default value of a local variable in Java?",
                "options": [
                    "0",
                    "null",
                    "Depends on datatype",
                    "No default value (must be initialized before use)"
                ],
                "answer": "No default value (must be initialized before use)"
            },
            {
                "q": "Which keyword in Java is used to prevent inheritance?",
                "options": [
                    "static",
                    "final",
                    "private",
                    "abstract"
                ],
                "answer": "final"
            },
            {
                "q": "What is the main difference between == and .equals() in Java?",
                "options": [
                    "== compares references, .equals() compares values",
                    "== compares values, .equals() compares references",
                    "Both do the same",
                    "None of the above"
                ],
                "answer": "== compares references, .equals() compares values"
            },
            {
                "q": "Which of the following cannot be overridden in Java?",
                "options": [
                    "final methods",
                    "static methods",
                    "private methods",
                    "All of the above"
                ],
                "answer": "All of the above"
            },
            {
                "q": "What is the difference between method overloading and method overriding?",
                "options": [
                    "Overloading is compile-time, overriding is runtime",
                    "Overloading requires inheritance, overriding does not",
                    "Both are runtime",
                    "Both are compile-time"
                ],
                "answer": "Overloading is compile-time, overriding is runtime"
            },
            {
                "q": "Which collection class allows duplicate elements in Java?",
                "options": [
                    "Set",
                    "List",
                    "Map",
                    "None"
                ],
                "answer": "List"
            },
            {
                "q": "Which of the following is true about constructors in Java?",
                "options": [
                    "They must have the same name as the class",
                    "They must return void",
                    "They are inherited by subclasses",
                    "They can be called directly without object creation"
                ],
                "answer": "They must have the same name as the class"
            },
            {
                "q": "What is the main purpose of garbage collection in Java?",
                "options": [
                    "To manually delete unused variables",
                    "To reclaim memory used by unreachable objects",
                    "To stop memory leaks at compile time",
                    "To delete static variables"
                ],
                "answer": "To reclaim memory used by unreachable objects"
            }
        ]
    },
    {
        "title": "Java Test 3",
        "duration": 10,
        "questions": [
            {
                "q": "Which access modifier allows visibility only within the same package in Java?",
                "options": [
                    "public",
                    "private",
                    "protected",
                    "default (no modifier)"
                ],
                "answer": "default (no modifier)"
            },
            {
                "q": "What is the main use of the 'super' keyword in Java?",
                "options": [
                    "To call superclass methods/constructors",
                    "To access private variables",
                    "To stop method overriding",
                    "To declare constants"
                ],
                "answer": "To call superclass methods/constructors"
            },
            {
                "q": "Which concept allows a subclass to provide a specific implementation of a method declared in its parent class?",
                "options": [
                    "Method Overloading",
                    "Method Overriding",
                    "Encapsulation",
                    "Abstraction"
                ],
                "answer": "Method Overriding"
            },
            {
                "q": "Which Java feature ensures security by running code inside a controlled environment?",
                "options": [
                    "Polymorphism",
                    "JVM Sandbox",
                    "Inheritance",
                    "Reflection"
                ],
                "answer": "JVM Sandbox"
            },
            {
                "q": "Which keyword is used to inherit a class in Java?",
                "options": [
                    "import",
                    "inherits",
                    "extends",
                    "implements"
                ],
                "answer": "extends"
            },
            {
                "q": "Which keyword is used to implement an interface in Java?",
                "options": [
                    "extends",
                    "implements",
                    "inherit",
                    "interface"
                ],
                "answer": "implements"
            },
            {
                "q": "Can we override a static method in Java?",
                "options": [
                    "Yes",
                    "No",
                    "Only if it is public",
                    "Only if it is final"
                ],
                "answer": "No"
            },
            {
                "q": "Which concept of OOP binds data and methods together as a single unit?",
                "options": [
                    "Encapsulation",
                    "Abstraction",
                    "Polymorphism",
                    "Inheritance"
                ],
                "answer": "Encapsulation"
            },
            {
                "q": "Which of the following is not part of Java’s OOP features?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Platform Independence",
                    "Inheritance"
                ],
                "answer": "Platform Independence"
            },
            {
                "q": "Which of these is not a Java keyword?",
                "options": [
                    "native",
                    "volatile",
                    "unsigned",
                    "synchronized"
                ],
                "answer": "unsigned"
            }
        ]
    },
    {
        "title": "Java Test 4",
        "duration": 10,
        "questions": [
            {
                "q": "What is the output of System.out.println(10 + 20 + \"Java\")?",
                "options": [
                    "30Java",
                    "Java30",
                    "1020Java",
                    "Error"
                ],
                "answer": "30Java"
            },
            {
                "q": "What is the output of System.out.println(\"Java\" + 10 + 20)?",
                "options": [
                    "Java30",
                    "Java1020",
                    "30Java",
                    "Error"
                ],
                "answer": "Java1020"
            },
            {
                "q": "What is the use of the transient keyword in Java?",
                "options": [
                    "To make variable thread-safe",
                    "To exclude variable from serialization",
                    "To make variable constant",
                    "To allow overriding"
                ],
                "answer": "To exclude variable from serialization"
            },
            {
                "q": "Which Java feature is achieved using interfaces?",
                "options": [
                    "Multiple Inheritance",
                    "Method Overloading",
                    "Garbage Collection",
                    "Encapsulation"
                ],
                "answer": "Multiple Inheritance"
            },
            {
                "q": "Which type of class cannot be instantiated directly?",
                "options": [
                    "Abstract class",
                    "Concrete class",
                    "Final class",
                    "Static class"
                ],
                "answer": "Abstract class"
            },
            {
                "q": "What is the base class of all classes in Java?",
                "options": [
                    "Object",
                    "Class",
                    "Base",
                    "Super"
                ],
                "answer": "Object"
            },
            {
                "q": "Which package contains collection framework classes?",
                "options": [
                    "java.util",
                    "java.io",
                    "java.lang",
                    "java.sql"
                ],
                "answer": "java.util"
            },
            {
                "q": "Which keyword is used to stop a thread in Java?",
                "options": [
                    "stop()",
                    "terminate()",
                    "interrupt()",
                    "exit()"
                ],
                "answer": "interrupt()"
            },
            {
                "q": "Which of the following is true about String in Java?",
                "options": [
                    "Strings are immutable",
                    "Strings are mutable",
                    "Strings are stored in stack",
                    "Strings are garbage collected immediately"
                ],
                "answer": "Strings are immutable"
            },
            {
                "q": "Which exception is thrown when dividing a number by zero in Java?",
                "options": [
                    "NullPointerException",
                    "ArithmeticException",
                    "IOException",
                    "NumberFormatException"
                ],
                "answer": "ArithmeticException"
            }
        ]
    },
    {
        "title": "Java Test 5",
        "duration": 10,
        "questions": [
            {
                "q": "Which type of variables are shared among all objects of a class?",
                "options": [
                    "Instance variables",
                    "Static variables",
                    "Local variables",
                    "Transient variables"
                ],
                "answer": "Static variables"
            },
            {
                "q": "Which of these is not a Java access modifier?",
                "options": [
                    "public",
                    "private",
                    "protected",
                    "friend"
                ],
                "answer": "friend"
            },
            {
                "q": "Which method is called automatically before an object is destroyed by garbage collection?",
                "options": [
                    "finalize()",
                    "destroy()",
                    "delete()",
                    "dispose()"
                ],
                "answer": "finalize()"
            },
            {
                "q": "Which keyword is used to define a constant variable in Java?",
                "options": [
                    "static",
                    "const",
                    "final",
                    "constant"
                ],
                "answer": "final"
            },
            {
                "q": "Which collection does not allow duplicate elements in Java?",
                "options": [
                    "List",
                    "Set",
                    "ArrayList",
                    "LinkedList"
                ],
                "answer": "Set"
            },
            {
                "q": "Which of the following can be used for synchronization in Java?",
                "options": [
                    "synchronized keyword",
                    "Lock interface",
                    "volatile keyword",
                    "Both synchronized and Lock"
                ],
                "answer": "Both synchronized and Lock"
            },
            {
                "q": "Which operator is used to allocate memory for an object in Java?",
                "options": [
                    "malloc",
                    "alloc",
                    "new",
                    "create"
                ],
                "answer": "new"
            },
            {
                "q": "Which exception is checked in Java?",
                "options": [
                    "IOException",
                    "NullPointerException",
                    "ArithmeticException",
                    "ArrayIndexOutOfBoundsException"
                ],
                "answer": "IOException"
            },
            {
                "q": "Which Java keyword is used to explicitly throw an exception?",
                "options": [
                    "throws",
                    "throw",
                    "catch",
                    "finally"
                ],
                "answer": "throw"
            },
            {
                "q": "Which block in Java is always executed whether an exception occurs or not?",
                "options": [
                    "try",
                    "catch",
                    "finally",
                    "throw"
                ],
                "answer": "finally"
            }
        ]
    },
    {
        "title": "Java Test 6",
        "duration": 10,
        "questions": [
            {
                "q": "What is the difference between an abstract class and an interface in Java?",
                "options": [
                    "Abstract class can have constructors, interface cannot",
                    "Both can have constructors",
                    "Interface supports multiple inheritance but abstract class doesn’t",
                    "Abstract class cannot have abstract methods"
                ],
                "answer": "Abstract class can have constructors, interface cannot"
            },
            {
                "q": "Which principle of OOP is achieved using method overloading?",
                "options": [
                    "Abstraction",
                    "Polymorphism",
                    "Encapsulation",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "What is the default access modifier for classes in Java?",
                "options": [
                    "public",
                    "private",
                    "protected",
                    "default (package-private)"
                ],
                "answer": "default (package-private)"
            },
            {
                "q": "Which keyword is used to prevent inheritance of a class?",
                "options": [
                    "final",
                    "static",
                    "super",
                    "const"
                ],
                "answer": "final"
            },
            {
                "q": "What will happen if a constructor is declared private in Java?",
                "options": [
                    "The class cannot be instantiated outside the class",
                    "The class cannot be extended",
                    "The class cannot be compiled",
                    "It will throw runtime error"
                ],
                "answer": "The class cannot be instantiated outside the class"
            },
            {
                "q": "Which of the following supports runtime polymorphism?",
                "options": [
                    "Method overloading",
                    "Method overriding",
                    "Constructor overloading",
                    "Operator overloading"
                ],
                "answer": "Method overriding"
            },
            {
                "q": "What is the purpose of the super keyword in Java?",
                "options": [
                    "To call parent class constructor",
                    "To call child class method",
                    "To stop method overriding",
                    "To define constants"
                ],
                "answer": "To call parent class constructor"
            },
            {
                "q": "Which OOP principle is violated if encapsulation is broken?",
                "options": [
                    "Polymorphism",
                    "Inheritance",
                    "Abstraction",
                    "Data hiding"
                ],
                "answer": "Data hiding"
            },
            {
                "q": "Which class in Java is the parent of all classes?",
                "options": [
                    "Base",
                    "Object",
                    "Super",
                    "Root"
                ],
                "answer": "Object"
            },
            {
                "q": "What happens when you try to override a static method in Java?",
                "options": [
                    "It overrides normally",
                    "It throws compilation error",
                    "It results in method hiding",
                    "It gives runtime error"
                ],
                "answer": "It results in method hiding"
            }
        ]
    },
    {
        "title": "Java Test 7",
        "duration": 10,
        "questions": [
            {
                "q": "Which keyword is used to achieve multiple inheritance in Java?",
                "options": [
                    "extends",
                    "implements",
                    "inherit",
                    "super"
                ],
                "answer": "implements"
            },
            {
                "q": "Which method is called automatically during object creation?",
                "options": [
                    "finalize()",
                    "main()",
                    "constructor",
                    "static block"
                ],
                "answer": "constructor"
            },
            {
                "q": "What is method overloading in Java?",
                "options": [
                    "Same method name but different return types",
                    "Same method name with different parameter lists",
                    "Different method names with same body",
                    "Redefining method of superclass"
                ],
                "answer": "Same method name with different parameter lists"
            },
            {
                "q": "Which OOP concept ensures only relevant details are exposed?",
                "options": [
                    "Encapsulation",
                    "Inheritance",
                    "Abstraction",
                    "Polymorphism"
                ],
                "answer": "Abstraction"
            },
            {
                "q": "Which modifier makes a variable constant in Java?",
                "options": [
                    "static",
                    "const",
                    "final",
                    "immutable"
                ],
                "answer": "final"
            },
            {
                "q": "Which block executes whether exception is handled or not?",
                "options": [
                    "try",
                    "catch",
                    "finally",
                    "throw"
                ],
                "answer": "finally"
            },
            {
                "q": "What is the main purpose of encapsulation in Java?",
                "options": [
                    "To improve performance",
                    "To protect data using access modifiers",
                    "To allow multiple inheritance",
                    "To simplify method overloading"
                ],
                "answer": "To protect data using access modifiers"
            },
            {
                "q": "Which of these can be overridden in a subclass?",
                "options": [
                    "private methods",
                    "final methods",
                    "static methods",
                    "instance methods"
                ],
                "answer": "instance methods"
            },
            {
                "q": "What is the default value of an uninitialized object reference in Java?",
                "options": [
                    "0",
                    "null",
                    "undefined",
                    "empty string"
                ],
                "answer": "null"
            },
            {
                "q": "Which design principle is supported by interfaces?",
                "options": [
                    "Loose coupling",
                    "Tight coupling",
                    "Strong encapsulation",
                    "Static binding"
                ],
                "answer": "Loose coupling"
            }
        ]
    },
    {
        "title": "Java Test 8",
        "duration": 10,
        "questions": [
            {
                "q": "Which exception is thrown when dividing by zero in Java?",
                "options": [
                    "NullPointerException",
                    "ArithmeticException",
                    "NumberFormatException",
                    "IllegalArgumentException"
                ],
                "answer": "ArithmeticException"
            },
            {
                "q": "Which keyword is used to inherit a class in Java?",
                "options": [
                    "inherit",
                    "extend",
                    "extends",
                    "implements"
                ],
                "answer": "extends"
            },
            {
                "q": "What does JVM stand for?",
                "options": [
                    "Java Virtual Machine",
                    "Java Verified Module",
                    "Java Variable Manager",
                    "Java Version Manager"
                ],
                "answer": "Java Virtual Machine"
            },
            {
                "q": "Which of the following is not a feature of Java?",
                "options": [
                    "Platform independent",
                    "Object-oriented",
                    "Pointer manipulation",
                    "Robust"
                ],
                "answer": "Pointer manipulation"
            },
            {
                "q": "Which collection class allows key-value pairs in Java?",
                "options": [
                    "List",
                    "Set",
                    "Map",
                    "Queue"
                ],
                "answer": "Map"
            },
            {
                "q": "Which OOP principle allows code reusability?",
                "options": [
                    "Polymorphism",
                    "Abstraction",
                    "Encapsulation",
                    "Inheritance"
                ],
                "answer": "Inheritance"
            },
            {
                "q": "What is the size of int in Java?",
                "options": [
                    "2 bytes",
                    "4 bytes",
                    "8 bytes",
                    "Depends on OS"
                ],
                "answer": "4 bytes"
            },
            {
                "q": "What does the 'this' keyword represent in Java?",
                "options": [
                    "Parent class reference",
                    "Current object reference",
                    "Child class reference",
                    "Static method reference"
                ],
                "answer": "Current object reference"
            },
            {
                "q": "Which Java feature ensures memory is freed automatically?",
                "options": [
                    "Memory allocation",
                    "Garbage collection",
                    "Dynamic binding",
                    "Exception handling"
                ],
                "answer": "Garbage collection"
            },
            {
                "q": "Which operator is used for object comparison in Java?",
                "options": [
                    "==",
                    "equals()",
                    "compare()",
                    "compareTo()"
                ],
                "answer": "equals()"
            }
        ]
    },
    {
        "title": "Java Test 9",
        "duration": 10,
        "questions": [
            {
                "q": "Which access modifier allows access within the same package only?",
                "options": [
                    "public",
                    "private",
                    "protected",
                    "default"
                ],
                "answer": "default"
            },
            {
                "q": "Which class is immutable in Java?",
                "options": [
                    "String",
                    "StringBuilder",
                    "StringBuffer",
                    "CharSequence"
                ],
                "answer": "String"
            },
            {
                "q": "Which OOP principle is achieved using abstract classes?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction",
                    "Inheritance"
                ],
                "answer": "Abstraction"
            },
            {
                "q": "Which keyword is used to throw an exception in Java?",
                "options": [
                    "throws",
                    "throw",
                    "catch",
                    "final"
                ],
                "answer": "throw"
            },
            {
                "q": "Which data structure does HashMap internally use?",
                "options": [
                    "LinkedList",
                    "Array",
                    "HashTable",
                    "Binary Tree"
                ],
                "answer": "HashTable"
            },
            {
                "q": "Which interface is implemented by all collection classes?",
                "options": [
                    "Collection",
                    "List",
                    "Set",
                    "Iterable"
                ],
                "answer": "Iterable"
            },
            {
                "q": "Which method is executed just before an object is garbage collected?",
                "options": [
                    "final()",
                    "dispose()",
                    "close()",
                    "finalize()"
                ],
                "answer": "finalize()"
            },
            {
                "q": "What type of polymorphism is method overriding?",
                "options": [
                    "Compile-time",
                    "Runtime",
                    "Static",
                    "None"
                ],
                "answer": "Runtime"
            },
            {
                "q": "Which of the following allows thread-safe operations?",
                "options": [
                    "ArrayList",
                    "HashMap",
                    "Vector",
                    "HashSet"
                ],
                "answer": "Vector"
            },
            {
                "q": "Which keyword is used to handle exceptions?",
                "options": [
                    "final",
                    "catch",
                    "try",
                    "try-catch"
                ],
                "answer": "try-catch"
            }
        ]
    },
    {
        "title": "Java Test 10",
        "duration": 10,
        "questions": [
            {
                "q": "What is the return type of the main() method in Java?",
                "options": [
                    "int",
                    "void",
                    "String",
                    "boolean"
                ],
                "answer": "void"
            },
            {
                "q": "Which concept allows a class to have more than one form of a method?",
                "options": [
                    "Encapsulation",
                    "Inheritance",
                    "Polymorphism",
                    "Abstraction"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "Which keyword makes a variable shared among all objects of a class?",
                "options": [
                    "shared",
                    "static",
                    "global",
                    "final"
                ],
                "answer": "static"
            },
            {
                "q": "Which collection class maintains insertion order?",
                "options": [
                    "HashSet",
                    "TreeSet",
                    "LinkedHashSet",
                    "PriorityQueue"
                ],
                "answer": "LinkedHashSet"
            },
            {
                "q": "Which keyword is used to define a constant method that cannot be overridden?",
                "options": [
                    "static",
                    "final",
                    "const",
                    "abstract"
                ],
                "answer": "final"
            },
            {
                "q": "Which operator is used for object type comparison?",
                "options": [
                    "==",
                    "equals()",
                    "instanceof",
                    "compareTo()"
                ],
                "answer": "instanceof"
            },
            {
                "q": "Which class in Java is used to handle threads?",
                "options": [
                    "Runnable",
                    "Thread",
                    "Process",
                    "Executor"
                ],
                "answer": "Thread"
            },
            {
                "q": "What is the output of System.out.println(10 + 20 + \"Java\")?",
                "options": [
                    "30Java",
                    "Java30",
                    "1020Java",
                    "Error"
                ],
                "answer": "30Java"
            },
            {
                "q": "Which method is used to compare two strings lexicographically?",
                "options": [
                    "equals()",
                    "compareTo()",
                    "==",
                    "hashCode()"
                ],
                "answer": "compareTo()"
            },
            {
                "q": "Which Java concept provides security and portability?",
                "options": [
                    "Bytecode",
                    "Garbage Collector",
                    "ClassLoader",
                    "JVM"
                ],
                "answer": "Bytecode"
            }
        ]
    },
    {
        "title": "Java Test 11",
        "duration": 10,
        "questions": [
            {
                "q": "What is method overloading in Java?",
                "options": [
                    "Defining multiple methods with the same name but different parameters",
                    "Defining methods with same parameters but different return types",
                    "Overriding parent methods in a subclass",
                    "Creating methods with different access modifiers"
                ],
                "answer": "Defining multiple methods with the same name but different parameters"
            },
            {
                "q": "Which principle of OOP is achieved by method overriding?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "What is a Java interface?",
                "options": [
                    "A class with only private methods",
                    "A blueprint of a class with abstract methods",
                    "A collection of static variables only",
                    "A predefined library"
                ],
                "answer": "A blueprint of a class with abstract methods"
            },
            {
                "q": "Can we achieve multiple inheritance in Java using classes?",
                "options": [
                    "Yes",
                    "No"
                ],
                "answer": "No"
            },
            {
                "q": "Which keyword is used to prevent inheritance of a class in Java?",
                "options": [
                    "static",
                    "final",
                    "abstract",
                    "extends"
                ],
                "answer": "final"
            },
            {
                "q": "Which of these is not a feature of Java?",
                "options": [
                    "Platform independence",
                    "Object oriented",
                    "Pointer manipulation",
                    "Automatic garbage collection"
                ],
                "answer": "Pointer manipulation"
            },
            {
                "q": "What is constructor chaining in Java?",
                "options": [
                    "Calling one constructor from another",
                    "Calling parent methods",
                    "Calling multiple objects",
                    "Chaining loops together"
                ],
                "answer": "Calling one constructor from another"
            },
            {
                "q": "Which method is the entry point of a Java program?",
                "options": [
                    "start()",
                    "run()",
                    "init()",
                    "main()"
                ],
                "answer": "main()"
            },
            {
                "q": "Which exception is thrown when dividing a number by zero in Java?",
                "options": [
                    "ArithmeticException",
                    "NullPointerException",
                    "IOException",
                    "NumberFormatException"
                ],
                "answer": "ArithmeticException"
            },
            {
                "q": "What does JVM stand for?",
                "options": [
                    "Java Variable Machine",
                    "Java Virtual Machine",
                    "Java Verified Module",
                    "Java Version Manager"
                ],
                "answer": "Java Virtual Machine"
            }
        ]
    },
    {
        "title": "Java Test 12",
        "duration": 10,
        "questions": [
            {
                "q": "Which of the following is true about abstract classes in Java?",
                "options": [
                    "They cannot have methods with implementations",
                    "They can contain both abstract and non-abstract methods",
                    "They cannot have constructors",
                    "They must implement all methods of an interface"
                ],
                "answer": "They can contain both abstract and non-abstract methods"
            },
            {
                "q": "Which keyword is used to access the parent class members in Java?",
                "options": [
                    "this",
                    "super",
                    "extends",
                    "final"
                ],
                "answer": "super"
            },
            {
                "q": "What is encapsulation in Java?",
                "options": [
                    "Hiding internal details and showing only essential information",
                    "Overriding methods in a subclass",
                    "Using multiple interfaces",
                    "Overloading constructors"
                ],
                "answer": "Hiding internal details and showing only essential information"
            },
            {
                "q": "Which collection class allows key-value pairs in Java?",
                "options": [
                    "List",
                    "Set",
                    "Map",
                    "Queue"
                ],
                "answer": "Map"
            },
            {
                "q": "Which of the following is a marker interface in Java?",
                "options": [
                    "Runnable",
                    "Serializable",
                    "Comparable",
                    "Cloneable"
                ],
                "answer": "Serializable"
            },
            {
                "q": "What is the difference between ‘==’ and ‘equals()’ in Java?",
                "options": [
                    "Both are same",
                    "== compares object references, equals() compares values",
                    "== compares values, equals() compares references",
                    "Both are used only for primitive data types"
                ],
                "answer": "== compares object references, equals() compares values"
            },
            {
                "q": "Which package is imported by default in every Java program?",
                "options": [
                    "java.io",
                    "java.util",
                    "java.lang",
                    "java.sql"
                ],
                "answer": "java.lang"
            },
            {
                "q": "Which method is called automatically when an object is created?",
                "options": [
                    "start()",
                    "main()",
                    "constructor",
                    "init()"
                ],
                "answer": "constructor"
            },
            {
                "q": "Which keyword is used for inheritance in Java?",
                "options": [
                    "super",
                    "import",
                    "extends",
                    "implements"
                ],
                "answer": "extends"
            },
            {
                "q": "Which type of polymorphism does method overloading represent?",
                "options": [
                    "Compile-time",
                    "Run-time",
                    "Dynamic",
                    "Hybrid"
                ],
                "answer": "Compile-time"
            }
        ]
    },
    {
        "title": "Java Test 13",
        "duration": 10,
        "questions": [
            {
                "q": "Which class is the parent of all Java classes?",
                "options": [
                    "Object",
                    "Class",
                    "Base",
                    "Root"
                ],
                "answer": "Object"
            },
            {
                "q": "Which method is called automatically before garbage collection?",
                "options": [
                    "delete()",
                    "free()",
                    "finalize()",
                    "dispose()"
                ],
                "answer": "finalize()"
            },
            {
                "q": "Which of these is not an OOPs concept in Java?",
                "options": [
                    "Polymorphism",
                    "Encapsulation",
                    "Compilation",
                    "Inheritance"
                ],
                "answer": "Compilation"
            },
            {
                "q": "What is the default value of a boolean variable in Java?",
                "options": [
                    "true",
                    "false",
                    "null",
                    "0"
                ],
                "answer": "false"
            },
            {
                "q": "Which of the following is true about interfaces in Java?",
                "options": [
                    "They can have constructors",
                    "They can extend multiple interfaces",
                    "They can implement classes",
                    "They can contain private constructors"
                ],
                "answer": "They can extend multiple interfaces"
            },
            {
                "q": "Which collection class maintains insertion order?",
                "options": [
                    "HashSet",
                    "TreeSet",
                    "LinkedHashSet",
                    "PriorityQueue"
                ],
                "answer": "LinkedHashSet"
            },
            {
                "q": "What is the default access modifier in Java?",
                "options": [
                    "private",
                    "protected",
                    "public",
                    "default (package-private)"
                ],
                "answer": "default (package-private)"
            },
            {
                "q": "Which keyword is used to define a constant in Java?",
                "options": [
                    "static",
                    "final",
                    "const",
                    "immutable"
                ],
                "answer": "final"
            },
            {
                "q": "What does JDK stand for?",
                "options": [
                    "Java Development Kit",
                    "Java Deployment Key",
                    "Java Debugging Kit",
                    "Java Data Kernel"
                ],
                "answer": "Java Development Kit"
            },
            {
                "q": "Which keyword is used to define an abstract method?",
                "options": [
                    "virtual",
                    "abstract",
                    "static",
                    "override"
                ],
                "answer": "abstract"
            }
        ]
    },
    {
        "title": "Java Test 14",
        "duration": 10,
        "questions": [
            {
                "q": "Which design pattern is used in Java for creating only one instance of a class?",
                "options": [
                    "Factory",
                    "Singleton",
                    "Prototype",
                    "Builder"
                ],
                "answer": "Singleton"
            },
            {
                "q": "What is checked exception in Java?",
                "options": [
                    "Exceptions checked at compile time",
                    "Exceptions checked at runtime",
                    "Errors in JVM",
                    "Exceptions ignored by compiler"
                ],
                "answer": "Exceptions checked at compile time"
            },
            {
                "q": "Which keyword is used to handle exceptions in Java?",
                "options": [
                    "try",
                    "catch",
                    "throw",
                    "All of the above"
                ],
                "answer": "All of the above"
            },
            {
                "q": "Which interface is used for sorting in Java?",
                "options": [
                    "Runnable",
                    "Serializable",
                    "Comparable",
                    "Cloneable"
                ],
                "answer": "Comparable"
            },
            {
                "q": "Which collection class allows duplicate elements?",
                "options": [
                    "Set",
                    "List",
                    "Map",
                    "HashSet"
                ],
                "answer": "List"
            },
            {
                "q": "Which keyword is used to explicitly throw an exception?",
                "options": [
                    "try",
                    "throw",
                    "throws",
                    "error"
                ],
                "answer": "throw"
            },
            {
                "q": "Which block is always executed in exception handling?",
                "options": [
                    "try",
                    "catch",
                    "finally",
                    "throw"
                ],
                "answer": "finally"
            },
            {
                "q": "Which class in Java is used for input from users?",
                "options": [
                    "Scanner",
                    "InputStream",
                    "Reader",
                    "BufferedWriter"
                ],
                "answer": "Scanner"
            },
            {
                "q": "Which method is used to start a thread in Java?",
                "options": [
                    "start()",
                    "run()",
                    "init()",
                    "execute()"
                ],
                "answer": "start()"
            },
            {
                "q": "Which keyword is used to inherit an interface in Java?",
                "options": [
                    "extends",
                    "implements",
                    "super",
                    "import"
                ],
                "answer": "implements"
            }
        ]
    },
    {
        "title": "Java Test 15",
        "duration": 10,
        "questions": [
            {
                "q": "What is multithreading in Java?",
                "options": [
                    "Running multiple programs",
                    "Running multiple threads simultaneously",
                    "Running multiple JVMs",
                    "Running multiple databases"
                ],
                "answer": "Running multiple threads simultaneously"
            },
            {
                "q": "Which keyword is used to stop method overriding?",
                "options": [
                    "final",
                    "abstract",
                    "static",
                    "default"
                ],
                "answer": "final"
            },
            {
                "q": "Which class provides thread-safe methods in Java?",
                "options": [
                    "StringBuilder",
                    "StringBuffer",
                    "ArrayList",
                    "HashMap"
                ],
                "answer": "StringBuffer"
            },
            {
                "q": "Which keyword is used to create an object in Java?",
                "options": [
                    "this",
                    "super",
                    "create",
                    "new"
                ],
                "answer": "new"
            },
            {
                "q": "Which Java feature allows the same method to perform different tasks?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "Which class is immutable in Java?",
                "options": [
                    "String",
                    "StringBuilder",
                    "StringBuffer",
                    "CharArray"
                ],
                "answer": "String"
            },
            {
                "q": "What is the default priority of a Java thread?",
                "options": [
                    "0",
                    "5",
                    "10",
                    "1"
                ],
                "answer": "5"
            },
            {
                "q": "Which method is used to get the current thread in Java?",
                "options": [
                    "getThread()",
                    "currentThread()",
                    "thisThread()",
                    "activeThread()"
                ],
                "answer": "currentThread()"
            },
            {
                "q": "Which keyword is used to synchronize a method in Java?",
                "options": [
                    "sync",
                    "lock",
                    "synchronized",
                    "final"
                ],
                "answer": "synchronized"
            },
            {
                "q": "What is the difference between HashMap and Hashtable?",
                "options": [
                    "HashMap is synchronized, Hashtable is not",
                    "HashMap allows null keys, Hashtable does not",
                    "Hashtable is faster",
                    "They are identical"
                ],
                "answer": "HashMap allows null keys, Hashtable does not"
            }
        ]
    },
    {
        "title": "Java Test 16",
        "duration": 10,
        "questions": [
            {
                "q": "What is the difference between method overloading and method overriding in Java?",
                "options": [
                    "Overloading is runtime polymorphism, overriding is compile-time polymorphism",
                    "Overloading is compile-time polymorphism, overriding is runtime polymorphism",
                    "Both are runtime polymorphism",
                    "Both are compile-time polymorphism"
                ],
                "answer": "Overloading is compile-time polymorphism, overriding is runtime polymorphism"
            },
            {
                "q": "Which access modifiers can be used for interfaces in Java?",
                "options": [
                    "public, default",
                    "private, public",
                    "protected, public",
                    "private, protected"
                ],
                "answer": "public, default"
            },
            {
                "q": "What keyword is used to prevent inheritance of a class in Java?",
                "options": [
                    "final",
                    "static",
                    "abstract",
                    "const"
                ],
                "answer": "final"
            },
            {
                "q": "What is the default return type of a constructor in Java?",
                "options": [
                    "void",
                    "int",
                    "class type itself",
                    "Object"
                ],
                "answer": "class type itself"
            },
            {
                "q": "Can a static method be overridden in Java?",
                "options": [
                    "Yes",
                    "No",
                    "Only in abstract classes",
                    "Depends on JVM"
                ],
                "answer": "No"
            },
            {
                "q": "What is the main advantage of using generics in Java?",
                "options": [
                    "Faster execution",
                    "Type safety",
                    "Less memory usage",
                    "Dynamic compilation"
                ],
                "answer": "Type safety"
            },
            {
                "q": "Which of the following can a constructor call explicitly?",
                "options": [
                    "this()",
                    "super()",
                    "Both this() and super()",
                    "None"
                ],
                "answer": "Both this() and super()"
            },
            {
                "q": "What does the JVM use to identify methods uniquely?",
                "options": [
                    "Method name only",
                    "Method name + parameters",
                    "Return type only",
                    "Class name + return type"
                ],
                "answer": "Method name + parameters"
            },
            {
                "q": "What is the parent class of all Java classes?",
                "options": [
                    "Object",
                    "Class",
                    "Base",
                    "Super"
                ],
                "answer": "Object"
            },
            {
                "q": "Which collection does not allow duplicate elements?",
                "options": [
                    "List",
                    "Set",
                    "Queue",
                    "Map"
                ],
                "answer": "Set"
            }
        ]
    },
    {
        "title": "Java Test 17",
        "duration": 10,
        "questions": [
            {
                "q": "What is the difference between checked and unchecked exceptions?",
                "options": [
                    "Checked exceptions are handled at runtime, unchecked at compile time",
                    "Checked exceptions are handled at compile time, unchecked at runtime",
                    "Both are compile time exceptions",
                    "Both are runtime exceptions"
                ],
                "answer": "Checked exceptions are handled at compile time, unchecked at runtime"
            },
            {
                "q": "Which keyword is used to achieve runtime polymorphism?",
                "options": [
                    "this",
                    "static",
                    "super",
                    "virtual"
                ],
                "answer": "super"
            },
            {
                "q": "Which collection maintains insertion order?",
                "options": [
                    "HashSet",
                    "LinkedHashSet",
                    "TreeSet",
                    "PriorityQueue"
                ],
                "answer": "LinkedHashSet"
            },
            {
                "q": "Which of the following is true about abstract classes?",
                "options": [
                    "Can have both abstract and concrete methods",
                    "Cannot have constructors",
                    "Cannot implement interfaces",
                    "Cannot have member variables"
                ],
                "answer": "Can have both abstract and concrete methods"
            },
            {
                "q": "Which class is used for mutable strings in Java?",
                "options": [
                    "String",
                    "StringBuilder",
                    "StringBuffer",
                    "Both StringBuilder and StringBuffer"
                ],
                "answer": "Both StringBuilder and StringBuffer"
            },
            {
                "q": "Which keyword is used to implement multiple inheritance in Java?",
                "options": [
                    "extends",
                    "implements",
                    "super",
                    "interface"
                ],
                "answer": "implements"
            },
            {
                "q": "What is the difference between == and .equals() in Java?",
                "options": [
                    "== compares values, equals() compares references",
                    "== compares references, equals() compares values",
                    "Both compare references",
                    "Both compare values"
                ],
                "answer": "== compares references, equals() compares values"
            },
            {
                "q": "Which package contains the collection framework?",
                "options": [
                    "java.util",
                    "java.lang",
                    "java.io",
                    "java.sql"
                ],
                "answer": "java.util"
            },
            {
                "q": "Which keyword is used to explicitly free memory in Java?",
                "options": [
                    "free",
                    "delete",
                    "dispose",
                    "None"
                ],
                "answer": "None"
            },
            {
                "q": "What is the size of int in Java?",
                "options": [
                    "16 bit",
                    "32 bit",
                    "64 bit",
                    "Depends on OS"
                ],
                "answer": "32 bit"
            }
        ]
    },
    {
        "title": "Java Test 18",
        "duration": 10,
        "questions": [
            {
                "q": "What is JVM?",
                "options": [
                    "Java Variable Machine",
                    "Java Virtual Machine",
                    "Java Verified Module",
                    "Java Version Manager"
                ],
                "answer": "Java Virtual Machine"
            },
            {
                "q": "What is the purpose of the 'transient' keyword in Java?",
                "options": [
                    "To make a variable constant",
                    "To prevent variable serialization",
                    "To make a variable static",
                    "To make a method final"
                ],
                "answer": "To prevent variable serialization"
            },
            {
                "q": "Which of these is not a feature of Java?",
                "options": [
                    "Platform independent",
                    "Automatic memory management",
                    "Multiple inheritance using classes",
                    "Object-oriented"
                ],
                "answer": "Multiple inheritance using classes"
            },
            {
                "q": "Which of these is true about interfaces?",
                "options": [
                    "Can extend multiple interfaces",
                    "Cannot contain constants",
                    "Can extend classes",
                    "Cannot contain abstract methods"
                ],
                "answer": "Can extend multiple interfaces"
            },
            {
                "q": "What does JIT stand for in Java?",
                "options": [
                    "Java Instant Translator",
                    "Just-In-Time Compiler",
                    "Java Internal Tool",
                    "Java Interface Translator"
                ],
                "answer": "Just-In-Time Compiler"
            },
            {
                "q": "Which of the following is true about 'final' keyword?",
                "options": [
                    "Can be used with variables, methods, and classes",
                    "Only used with methods",
                    "Only used with classes",
                    "Only used with variables"
                ],
                "answer": "Can be used with variables, methods, and classes"
            },
            {
                "q": "What is the default value of a boolean variable in Java?",
                "options": [
                    "true",
                    "false",
                    "0",
                    "null"
                ],
                "answer": "false"
            },
            {
                "q": "What is the difference between ArrayList and LinkedList?",
                "options": [
                    "ArrayList is faster for insertions, LinkedList is faster for access",
                    "ArrayList is faster for access, LinkedList is faster for insertions",
                    "Both are identical in performance",
                    "LinkedList uses less memory"
                ],
                "answer": "ArrayList is faster for access, LinkedList is faster for insertions"
            },
            {
                "q": "Which class is a superclass of all exceptions?",
                "options": [
                    "Throwable",
                    "Exception",
                    "Error",
                    "RuntimeException"
                ],
                "answer": "Throwable"
            },
            {
                "q": "Which loop is guaranteed to execute at least once?",
                "options": [
                    "for",
                    "while",
                    "do-while",
                    "enhanced for"
                ],
                "answer": "do-while"
            }
        ]
    },
    {
        "title": "Java Test 19",
        "duration": 10,
        "questions": [
            {
                "q": "Which keyword is used to prevent method overriding?",
                "options": [
                    "static",
                    "final",
                    "private",
                    "abstract"
                ],
                "answer": "final"
            },
            {
                "q": "What is the difference between abstract class and interface?",
                "options": [
                    "Abstract class supports multiple inheritance, interface does not",
                    "Interface supports multiple inheritance, abstract class does not",
                    "Both are the same",
                    "Abstract class cannot contain methods"
                ],
                "answer": "Interface supports multiple inheritance, abstract class does not"
            },
            {
                "q": "Which keyword is used for exception handling?",
                "options": [
                    "try",
                    "catch",
                    "throw",
                    "All of the above"
                ],
                "answer": "All of the above"
            },
            {
                "q": "What is the parent package of all Java packages?",
                "options": [
                    "java.lang",
                    "java.util",
                    "java.base",
                    "java.io"
                ],
                "answer": "java.lang"
            },
            {
                "q": "Which method is called just before an object is garbage collected?",
                "options": [
                    "destroy()",
                    "finalize()",
                    "close()",
                    "end()"
                ],
                "answer": "finalize()"
            },
            {
                "q": "Which keyword is used to access the parent class constructor?",
                "options": [
                    "this",
                    "super",
                    "parent",
                    "extends"
                ],
                "answer": "super"
            },
            {
                "q": "Which Java collection provides key-value mapping and does not allow duplicate keys?",
                "options": [
                    "List",
                    "Set",
                    "Map",
                    "Queue"
                ],
                "answer": "Map"
            },
            {
                "q": "Which operator is used for object type comparison?",
                "options": [
                    "==",
                    "equals()",
                    "instanceof",
                    "compareTo()"
                ],
                "answer": "instanceof"
            },
            {
                "q": "Which keyword is used to define a constant in Java?",
                "options": [
                    "const",
                    "final",
                    "static",
                    "immutable"
                ],
                "answer": "final"
            },
            {
                "q": "Which principle of OOPs is implemented by method overriding?",
                "options": [
                    "Encapsulation",
                    "Abstraction",
                    "Polymorphism",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            }
        ]
    },
    {
        "title": "Java Test 20",
        "duration": 10,
        "questions": [
            {
                "q": "Which of these is not an OOP concept in Java?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Compilation",
                    "Inheritance"
                ],
                "answer": "Compilation"
            },
            {
                "q": "What is the difference between StringBuilder and StringBuffer?",
                "options": [
                    "StringBuilder is synchronized, StringBuffer is not",
                    "StringBuffer is synchronized, StringBuilder is not",
                    "Both are synchronized",
                    "Both are not synchronized"
                ],
                "answer": "StringBuffer is synchronized, StringBuilder is not"
            },
            {
                "q": "Which keyword is used to inherit a class?",
                "options": [
                    "implement",
                    "extends",
                    "inherits",
                    "super"
                ],
                "answer": "extends"
            },
            {
                "q": "Which method is called when a thread starts?",
                "options": [
                    "run()",
                    "start()",
                    "execute()",
                    "main()"
                ],
                "answer": "run()"
            },
            {
                "q": "What is the difference between shallow copy and deep copy in Java?",
                "options": [
                    "Shallow copy copies objects completely, deep copy copies only references",
                    "Shallow copy copies references, deep copy copies objects completely",
                    "Both copy objects fully",
                    "Both copy references only"
                ],
                "answer": "Shallow copy copies references, deep copy copies objects completely"
            },
            {
                "q": "Which access modifier makes a member visible to all classes everywhere?",
                "options": [
                    "private",
                    "protected",
                    "public",
                    "default"
                ],
                "answer": "public"
            },
            {
                "q": "Which collection allows duplicate elements?",
                "options": [
                    "Set",
                    "Map",
                    "List",
                    "None"
                ],
                "answer": "List"
            },
            {
                "q": "Which principle of OOP ensures data hiding?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction",
                    "Inheritance"
                ],
                "answer": "Encapsulation"
            },
            {
                "q": "Which operator is used to allocate memory for an object?",
                "options": [
                    "malloc",
                    "alloc",
                    "new",
                    "create"
                ],
                "answer": "new"
            },
            {
                "q": "Which is the marker interface in Java?",
                "options": [
                    "Cloneable",
                    "Serializable",
                    "Remote",
                    "All of the above"
                ],
                "answer": "All of the above"
            }
        ]
    },
    {
        "title": "Java Test 21",
        "duration": 10,
        "questions": [
            {
                "q": "Which principle of OOP is achieved by method overloading in Java?",
                "options": [
                    "Abstraction",
                    "Encapsulation",
                    "Polymorphism",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "Which keyword in Java prevents method overriding?",
                "options": [
                    "final",
                    "static",
                    "super",
                    "private"
                ],
                "answer": "final"
            },
            {
                "q": "What is the default value of an instance variable of type boolean in Java?",
                "options": [
                    "true",
                    "false",
                    "null",
                    "0"
                ],
                "answer": "false"
            },
            {
                "q": "Which collection class allows null keys and null values?",
                "options": [
                    "Hashtable",
                    "HashMap",
                    "TreeMap",
                    "ConcurrentHashMap"
                ],
                "answer": "HashMap"
            },
            {
                "q": "Which type of class cannot be instantiated directly?",
                "options": [
                    "Abstract class",
                    "Concrete class",
                    "Inner class",
                    "Subclass"
                ],
                "answer": "Abstract class"
            },
            {
                "q": "Which method is called when an object is garbage collected?",
                "options": [
                    "finalize()",
                    "dispose()",
                    "close()",
                    "destroy()"
                ],
                "answer": "finalize()"
            },
            {
                "q": "Which Java collection guarantees natural ordering of its elements?",
                "options": [
                    "HashSet",
                    "TreeSet",
                    "ArrayList",
                    "LinkedHashSet"
                ],
                "answer": "TreeSet"
            },
            {
                "q": "Which keyword is used to refer to the immediate parent class constructor?",
                "options": [
                    "this",
                    "super",
                    "parent",
                    "base"
                ],
                "answer": "super"
            },
            {
                "q": "Which exception is thrown when a thread is interrupted while sleeping?",
                "options": [
                    "InterruptedException",
                    "IOException",
                    "TimeoutException",
                    "IllegalThreadStateException"
                ],
                "answer": "InterruptedException"
            },
            {
                "q": "Which package contains the collection framework in Java?",
                "options": [
                    "java.lang",
                    "java.util",
                    "java.io",
                    "java.sql"
                ],
                "answer": "java.util"
            }
        ]
    },
    {
        "title": "Java Test 22",
        "duration": 10,
        "questions": [
            {
                "q": "Which type of variables are shared among all objects of a class?",
                "options": [
                    "Local variables",
                    "Instance variables",
                    "Static variables",
                    "Final variables"
                ],
                "answer": "Static variables"
            },
            {
                "q": "Which design pattern is used in Java Runtime class?",
                "options": [
                    "Factory",
                    "Singleton",
                    "Observer",
                    "Decorator"
                ],
                "answer": "Singleton"
            },
            {
                "q": "What is the parent class of all Java classes?",
                "options": [
                    "Object",
                    "Class",
                    "Base",
                    "Super"
                ],
                "answer": "Object"
            },
            {
                "q": "Which interface is implemented by all collection classes in Java?",
                "options": [
                    "List",
                    "Collection",
                    "Iterable",
                    "Set"
                ],
                "answer": "Iterable"
            },
            {
                "q": "Which keyword is used to implement multiple inheritance in Java?",
                "options": [
                    "extends",
                    "super",
                    "interface",
                    "implements"
                ],
                "answer": "implements"
            },
            {
                "q": "Which of these allows defining a constant in Java?",
                "options": [
                    "final",
                    "const",
                    "static",
                    "volatile"
                ],
                "answer": "final"
            },
            {
                "q": "Which exception is thrown when dividing by zero using integers?",
                "options": [
                    "ArithmeticException",
                    "IllegalArgumentException",
                    "NullPointerException",
                    "NumberFormatException"
                ],
                "answer": "ArithmeticException"
            },
            {
                "q": "Which Java concept allows different classes to have methods with the same name but different behavior?",
                "options": [
                    "Inheritance",
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "Which class provides methods for performing operations on files?",
                "options": [
                    "File",
                    "Files",
                    "FileReader",
                    "FileWriter"
                ],
                "answer": "File"
            },
            {
                "q": "Which method is used to start a thread execution?",
                "options": [
                    "run()",
                    "execute()",
                    "start()",
                    "init()"
                ],
                "answer": "start()"
            }
        ]
    },
    {
        "title": "Java Test 23",
        "duration": 10,
        "questions": [
            {
                "q": "Which of the following is not a valid Java access modifier?",
                "options": [
                    "public",
                    "protected",
                    "package",
                    "private"
                ],
                "answer": "package"
            },
            {
                "q": "Which Java feature ensures that code cannot access unauthorized memory?",
                "options": [
                    "Platform independent",
                    "Object-oriented",
                    "Robust and secure",
                    "Dynamic binding"
                ],
                "answer": "Robust and secure"
            },
            {
                "q": "Which keyword is used to inherit a class in Java?",
                "options": [
                    "super",
                    "implements",
                    "extends",
                    "inherits"
                ],
                "answer": "extends"
            },
            {
                "q": "Which of these is a marker interface?",
                "options": [
                    "Serializable",
                    "Cloneable",
                    "Remote",
                    "All of these"
                ],
                "answer": "All of these"
            },
            {
                "q": "Which method is always called when an object is created in Java?",
                "options": [
                    "init()",
                    "main()",
                    "constructor",
                    "start()"
                ],
                "answer": "constructor"
            },
            {
                "q": "Which Java feature allows binding of method call to the method body at runtime?",
                "options": [
                    "Early binding",
                    "Late binding",
                    "Static binding",
                    "Overloading"
                ],
                "answer": "Late binding"
            },
            {
                "q": "Which Java memory area is shared by all threads?",
                "options": [
                    "Stack",
                    "Heap",
                    "PC Register",
                    "Method Area"
                ],
                "answer": "Method Area"
            },
            {
                "q": "Which exception must be handled at compile time?",
                "options": [
                    "RuntimeException",
                    "Error",
                    "Checked Exception",
                    "NullPointerException"
                ],
                "answer": "Checked Exception"
            },
            {
                "q": "Which keyword is used to make a method not accessible to child classes?",
                "options": [
                    "static",
                    "abstract",
                    "final",
                    "private"
                ],
                "answer": "final"
            },
            {
                "q": "Which concept hides the internal details of an object?",
                "options": [
                    "Inheritance",
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction"
                ],
                "answer": "Abstraction"
            }
        ]
    },
    {
        "title": "Java Test 24",
        "duration": 10,
        "questions": [
            {
                "q": "Which of these is used to handle multiple exceptions in a single block?",
                "options": [
                    "multi catch",
                    "try-finally",
                    "nested try",
                    "throw"
                ],
                "answer": "multi catch"
            },
            {
                "q": "Which Java collection class implements FIFO order?",
                "options": [
                    "ArrayList",
                    "HashMap",
                    "LinkedList",
                    "TreeSet"
                ],
                "answer": "LinkedList"
            },
            {
                "q": "Which keyword is used to create a custom exception in Java?",
                "options": [
                    "throws",
                    "throw",
                    "catch",
                    "extends"
                ],
                "answer": "extends"
            },
            {
                "q": "Which of these classes are immutable in Java?",
                "options": [
                    "String",
                    "StringBuilder",
                    "StringBuffer",
                    "All of these"
                ],
                "answer": "String"
            },
            {
                "q": "Which Java class is used for thread synchronization?",
                "options": [
                    "Lock",
                    "Semaphore",
                    "synchronized",
                    "All of these"
                ],
                "answer": "All of these"
            },
            {
                "q": "Which collection class is best for implementing LRU cache?",
                "options": [
                    "HashMap",
                    "TreeMap",
                    "LinkedHashMap",
                    "PriorityQueue"
                ],
                "answer": "LinkedHashMap"
            },
            {
                "q": "Which method is used to compare objects in Java?",
                "options": [
                    "compareTo()",
                    "equals()",
                    "==",
                    "Both compareTo() and equals()"
                ],
                "answer": "Both compareTo() and equals()"
            },
            {
                "q": "Which Java class is used for handling large integers?",
                "options": [
                    "Integer",
                    "Long",
                    "BigInteger",
                    "BigDecimal"
                ],
                "answer": "BigInteger"
            },
            {
                "q": "Which Java keyword is used to import static members?",
                "options": [
                    "import",
                    "include",
                    "static import",
                    "final"
                ],
                "answer": "static import"
            },
            {
                "q": "Which principle of OOP states that only essential details should be exposed?",
                "options": [
                    "Encapsulation",
                    "Abstraction",
                    "Polymorphism",
                    "Inheritance"
                ],
                "answer": "Abstraction"
            }
        ]
    },
    {
        "title": "Java Test 25",
        "duration": 10,
        "questions": [
            {
                "q": "Which keyword is used to define a block of code that must always execute?",
                "options": [
                    "catch",
                    "throw",
                    "finally",
                    "default"
                ],
                "answer": "finally"
            },
            {
                "q": "Which type of variable can be declared inside an interface?",
                "options": [
                    "Instance",
                    "Static final",
                    "Local",
                    "Transient"
                ],
                "answer": "Static final"
            },
            {
                "q": "Which class in Java is used to create threads without extending Thread class?",
                "options": [
                    "Runnable",
                    "Executor",
                    "Callable",
                    "Future"
                ],
                "answer": "Runnable"
            },
            {
                "q": "Which keyword is used to explicitly throw an exception?",
                "options": [
                    "throws",
                    "throw",
                    "raise",
                    "error"
                ],
                "answer": "throw"
            },
            {
                "q": "Which concept in Java ensures that a class has only one instance?",
                "options": [
                    "Factory Pattern",
                    "Singleton Pattern",
                    "Builder Pattern",
                    "Prototype Pattern"
                ],
                "answer": "Singleton Pattern"
            },
            {
                "q": "Which Java class provides methods for mathematical operations?",
                "options": [
                    "Math",
                    "Number",
                    "Integer",
                    "Decimal"
                ],
                "answer": "Math"
            },
            {
                "q": "Which type of polymorphism is achieved using method overriding?",
                "options": [
                    "Compile-time",
                    "Runtime",
                    "Static",
                    "Operator"
                ],
                "answer": "Runtime"
            },
            {
                "q": "Which keyword is used to stop further subclassing of a class?",
                "options": [
                    "abstract",
                    "final",
                    "private",
                    "static"
                ],
                "answer": "final"
            },
            {
                "q": "Which collection class provides constant-time performance for basic operations like add, remove, and contains?",
                "options": [
                    "TreeSet",
                    "HashSet",
                    "ArrayList",
                    "LinkedList"
                ],
                "answer": "HashSet"
            },
            {
                "q": "Which class is the parent of Error and Exception in Java?",
                "options": [
                    "Object",
                    "Throwable",
                    "RuntimeException",
                    "StackTrace"
                ],
                "answer": "Throwable"
            }
        ]
    },
    {
        "title": "Java Test 26",
        "duration": 10,
        "questions": [
            {
                "q": "Which Java keyword is used to define constants inside an enum?",
                "options": [
                    "static",
                    "final",
                    "enum",
                    "const"
                ],
                "answer": "enum"
            },
            {
                "q": "Which exception is thrown when accessing an array beyond its limit?",
                "options": [
                    "ArrayIndexOutOfBoundsException",
                    "NullPointerException",
                    "IllegalStateException",
                    "NumberFormatException"
                ],
                "answer": "ArrayIndexOutOfBoundsException"
            },
            {
                "q": "Which class in Java provides dynamic arrays?",
                "options": [
                    "Array",
                    "Vector",
                    "ArrayList",
                    "HashMap"
                ],
                "answer": "ArrayList"
            },
            {
                "q": "Which Java keyword is used to explicitly call a parent class constructor?",
                "options": [
                    "this()",
                    "super()",
                    "parent()",
                    "base()"
                ],
                "answer": "super()"
            },
            {
                "q": "Which collection class maintains insertion order?",
                "options": [
                    "HashMap",
                    "HashSet",
                    "LinkedHashMap",
                    "TreeSet"
                ],
                "answer": "LinkedHashMap"
            },
            {
                "q": "Which method in Object class is used for cloning?",
                "options": [
                    "copy()",
                    "clone()",
                    "replicate()",
                    "duplicate()"
                ],
                "answer": "clone()"
            },
            {
                "q": "Which OOP principle is used when an object hides its internal state?",
                "options": [
                    "Abstraction",
                    "Encapsulation",
                    "Polymorphism",
                    "Inheritance"
                ],
                "answer": "Encapsulation"
            },
            {
                "q": "Which operator is used for object type comparison?",
                "options": [
                    "==",
                    "equals()",
                    "instanceof",
                    "compareTo()"
                ],
                "answer": "instanceof"
            },
            {
                "q": "Which Java keyword is used to achieve multiple inheritance through interfaces?",
                "options": [
                    "extends",
                    "super",
                    "implements",
                    "interface"
                ],
                "answer": "implements"
            },
            {
                "q": "Which type of class must override all abstract methods of its parent?",
                "options": [
                    "Concrete class",
                    "Interface",
                    "Static class",
                    "Enum"
                ],
                "answer": "Concrete class"
            }
        ]
    },
    {
        "title": "Java Test 27",
        "duration": 10,
        "questions": [
            {
                "q": "Which Java class is best suited for high-performance multi-threaded applications?",
                "options": [
                    "Vector",
                    "Hashtable",
                    "ConcurrentHashMap",
                    "ArrayList"
                ],
                "answer": "ConcurrentHashMap"
            },
            {
                "q": "Which principle of OOP allows method overriding?",
                "options": [
                    "Encapsulation",
                    "Polymorphism",
                    "Abstraction",
                    "Inheritance"
                ],
                "answer": "Polymorphism"
            },
            {
                "q": "Which Java class represents a sequence of characters and is mutable?",
                "options": [
                    "String",
                    "StringBuilder",
                    "StringBuffer",
                    "CharSequence"
                ],
                "answer": "StringBuilder"
            },
            {
                "q": "Which interface must be implemented to sort custom objects in natural order?",
                "options": [
                    "Comparator",
                    "Comparable",
                    "Cloneable",
                    "Iterable"
                ],
                "answer": "Comparable"
            },
            {
                "q": "Which Java keyword is used to declare a method without implementation?",
                "options": [
                    "static",
                    "abstract",
                    "final",
                    "native"
                ],
                "answer": "abstract"
            },
            {
                "q": "Which collection allows duplicate elements?",
                "options": [
                    "Set",
                    "List",
                    "Map",
                    "TreeSet"
                ],
                "answer": "List"
            },
            {
                "q": "Which exception is thrown if a null reference is used to call a method?",
                "options": [
                    "NullPointerException",
                    "IllegalStateException",
                    "NoSuchMethodException",
                    "IllegalArgumentException"
                ],
                "answer": "NullPointerException"
            },
            {
                "q": "Which thread state occurs when a thread is waiting for another thread to release a lock?",
                "options": [
                    "Waiting",
                    "Runnable",
                    "Blocked",
                    "Terminated"
                ],
                "answer": "Blocked"
            },
            {
                "q": "Which keyword in Java is used for inheritance with classes?",
                "options": [
                    "extends",
                    "implements",
                    "super",
                    "interface"
                ],
                "answer": "extends"
            },
            {
                "q": "Which Java operator cannot be overloaded?",
                "options": [
                    "+",
                    "==",
                    "instanceof",
                    "="
                ],
                "answer": "instanceof"
            }
        ]
    },
    {
        "title": "Java Test - 28",
        "duration": "10 min",
        "questions": [
            {
                "q": "Which keyword is used to inherit a class in Java?",
                "options": [
                    "this",
                    "super",
                    "extends",
                    "implements"
                ],
                "answer": "extends"
            },
            {
                "q": "Which method is the entry point of any Java program?",
                "options": [
                    "start()",
                    "main()",
                    "run()",
                    "init()"
                ],
                "answer": "main()"
            },
            {
                "q": "Which operator is used for string concatenation in Java?",
                "options": [
                    "+",
                    "&",
                    "concat",
                    "*"
                ],
                "answer": "+"
            },
            {
                "q": "What is the size of int data type in Java?",
                "options": [
                    "2 bytes",
                    "4 bytes",
                    "8 bytes",
                    "Depends on OS"
                ],
                "answer": "4 bytes"
            },
            {
                "q": "Which of these is not a primitive type in Java?",
                "options": [
                    "int",
                    "float",
                    "String",
                    "char"
                ],
                "answer": "String"
            },
            {
                "q": "Which package is automatically imported in every Java program?",
                "options": [
                    "java.io",
                    "java.util",
                    "java.lang",
                    "java.net"
                ],
                "answer": "java.lang"
            },
            {
                "q": "What is used to define a constant in Java?",
                "options": [
                    "final",
                    "const",
                    "static",
                    "immutable"
                ],
                "answer": "final"
            },
            {
                "q": "Which keyword is used to create an object in Java?",
                "options": [
                    "class",
                    "new",
                    "create",
                    "object"
                ],
                "answer": "new"
            },
            {
                "q": "Which of these is the correct way to declare an array in Java?",
                "options": [
                    "int arr[];",
                    "int[] arr;",
                    "int arr[] = new int[5];",
                    "All of the above"
                ],
                "answer": "All of the above"
            },
            {
                "q": "Which company developed Java?",
                "options": [
                    "Oracle",
                    "Microsoft",
                    "Sun Microsystems",
                    "IBM"
                ],
                "answer": "Sun Microsystems"
            }
        ]
    }
]